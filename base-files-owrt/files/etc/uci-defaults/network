#!/bin/sh
#
# Copyright (C) 2011-2012 OpenWrt.org
#

gen_mac() {
	local base_addr
	local mac_addr=""
	local index=$(($1 - 1))
	base_addr=`uboot_env --get --name ethaddr`
	mac_addr="${base_addr:0:15}`printf "%02X" $((0x${base_addr:15:2} + 0x$index))` "
	echo $mac_addr
}

get_ipaddr() {
	ipaddr=`uboot_env --get --name ipaddr 2>/dev/null`
	[ -z "$ipaddr" ] && ipaddr="192.168.1.1"
}

add_eth() {
	local index=$1
	local interface=$2
	local macaddr=$3
	uci batch <<EOF
set network.${interface}='interface'
set network.${interface}.ifname='$index'
set network.${interface}.macaddr='${macaddr}'
set network.${interface}.rps='0'
set network.${interface}.xps='0'
EOF
}

add_wan() {
	local name=$1
	local interface=$2
	local macaddr=$3
	uci batch <<EOF
set network.${interface}='interface'
set network.${interface}.ifname='$name'
set network.${interface}.proto='dhcp'
set network.${interface}.macaddr='${macaddr}'
set network.${interface}.rps='0'
set network.${interface}.xps='0'
EOF
}

add_interface_lan() {
	local ifname=$1
	get_ipaddr;

	uci batch <<EOF
del network.lan
set network.lan='interface'
set network.lan.proto='static'
set network.lan.ipaddr='$ipaddr'
set network.lan.netmask='255.255.255.0'
set network.lan.defaultroute='0'
set network.lan.type='bridge'
set network.lan.ifname='$ifname'
set network.lan.forward_delay='15'
set network.lan.priority='32768'
set network.lan.ip6assign='64'
set network.lan.rps='0'
set network.lan.xps='0'
EOF
}

add_interface_loopback() {
    uci batch <<EOF
del network.loopback
set network.loopback='interface'
set network.loopback.proto='static'
set network.loopback.ipaddr='127.0.0.1'
set network.loopback.netmask='255.0.0.0'
set network.loopback.defaultroute='0'
set network.loopback.ifname='lo'
set network.loopback.rps='0'
set network.loopback.xps='0'
set network.globals='globals'
set network.globals.ula_prefix='fc00::/64'
EOF
}

add_switch_port() {
	local name=$1
	local device=$2
	local port=$3
	local pvid=$4
	uci batch <<EOF
set network.$name='switch_port'
set network.$name.device='$device'
set network.$name.port='$port'
EOF
	[ -n "$pvid" ] && {
	uci batch <<EOF
set network.$name.pvid='$pvid'
EOF
	}
}

enable_switch() {
	local name=$1
	local enable=$2
	uci batch <<EOF
set network.$name='switch'
set network.$name.enable='$enable'
EOF
}

. /lib/functions/uci-defaults.sh
. /lib/functions/lantiq.sh

touch /etc/config/network

grep -q "nfsroot" /proc/cmdline || ucidef_set_interface_lan 'eth0'
board=$(lantiq_board_name)

case "$board" in
EASY350*|EASY550*)
	enable_switch "switch0" "1"
	enable_switch "switch1" "1"
	add_switch_port "eth0_1" "switch0" "1"
	add_switch_port "eth0_2" "switch0" "2"
	add_switch_port "eth0_3" "switch0" "3"
	add_switch_port "eth0_4" "switch0" "4"
	add_switch_port "eth1" "switch1" "14"

	add_interface_loopback
	add_interface_lan "eth0_1 eth0_2 eth0_3 eth0_4"

	for i in 1 2 3 4; do
		macaddr=`gen_mac $i`
		add_eth "eth0_$i" "iface_eth0_$i" "$macaddr"
	done

	i=$((i + 1))
	macaddr=`gen_mac $i`
	add_wan "eth1" "eth1_wan" "$macaddr"

	i=$((i + 1))
	macaddr=`gen_mac $i`
	add_wan "ptm0" "ptm0wan" "$macaddr"
	;;

esac

uci commit network

exit 0
